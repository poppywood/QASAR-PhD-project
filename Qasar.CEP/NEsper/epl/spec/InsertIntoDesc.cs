using System;
using System.Collections.Generic;

using com.espertech.esper.util;

namespace com.espertech.esper.epl.spec
{
	/// <summary> Descriptor generated by INSERT-INTO clauses specified in expressions to insert the
	/// results of statement as a stream to further statements.
	/// </summary>

	public class InsertIntoDesc : MetaDefItem
	{
		private readonly bool isIStream;
		private readonly String eventTypeAlias;
		private readonly IList<String> columnNames;

		/// <summary> Returns true if insert (new data) events are fed, or false for remove (old data) events are fed.</summary>
		/// <returns> true for insert stream, false for remove stream
		/// </returns>
		
		virtual public bool IsIStream
		{
			get { return isIStream; }
		}
		
		/// <summary> Returns name of event type to use for insert-into stream.</summary>
		/// <returns> event type alias name
		/// </returns>
		
		virtual public String EventTypeAlias
		{
			get { return eventTypeAlias; }
		}

		/// <summary> Returns a list of column names specified optionally in the insert-into clause, or empty if none specified.</summary>
		/// <returns> column names or empty list if none supplied
		/// </returns>

		virtual public IList<String> ColumnNames
		{
			get { return columnNames; }
		}

		/// <summary> Ctor.</summary>
		/// <param name="isIStream">is true if insert (new data) events are fed, or false for remove (old data) events are fed
		/// </param>
		/// <param name="eventTypeAlias">is the event type alias name
		/// </param>
		
		public InsertIntoDesc(bool isIStream, String eventTypeAlias)
		{
			this.isIStream = isIStream;
			this.eventTypeAlias = eventTypeAlias;
		    this.columnNames = new List<String>();
		}
		
		/// <summary> Add a column name to the insert-into clause.</summary>
		/// <param name="columnName">to add
		/// </param>

		public virtual void Add(String columnName)
		{
			columnNames.Add(columnName);
		}
	}
}
